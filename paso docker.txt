1. **Conéctate a tu Máquina Virtual vía SSH:**
   Abre una terminal en tu PC local y conéctate a tu VM:
   ```bash
   ssh lsanchez@192.168.1.18 -p 2025
   ```
   (O usa tu alias `ssh academia-devops`)

2. **Actualiza los paquetes existentes:**
   Una vez dentro de la VM, ejecuta:
   ```bash
   sudo apt update
   ```

3. **Instala los paquetes necesarios para usar repositorios HTTPS:**
   ```bash
   sudo apt install ca-certificates curl gnupg
   ```

4. **Añade la clave GPG oficial de Docker:**
   ```bash
   sudo install -m 0755 -d /etc/apt/keyrings
   curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
   sudo chmod a+r /etc/apt/keyrings/docker.gpg
   ```

5. **Configura el repositorio de Docker:**
   ```bash
   echo \
     "deb [arch=\"$(dpkg --print-architecture)\" signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
     \"$(. /etc/os-release && echo \"$VERSION_CODENAME\")\" stable" | \
     sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
   ```

6. **Actualiza de nuevo los índices de paquetes:**
   ```bash
   sudo apt update
   ```

7. **Instala Docker Engine, containerd y Docker Compose:**
   ```bash
   sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
   ```

8. **Añade tu usuario al grupo `docker` (para no usar `sudo` con cada comando `docker`):**
   ```bash
   sudo usermod -aG docker $USER
   ```
   **Importante:** Después de este comando, **debes cerrar tu sesión SSH y volver a conectarte** para que los cambios en los grupos de usuario surtan efecto.

9. **Verifica que Docker se haya instalado correctamente:**
   Después de reconectarte, ejecuta:
   ```bash
   docker run hello-world
   ```
   Si la instalación fue exitosa, verás un mensaje de confirmación de "Hello from Docker!".
